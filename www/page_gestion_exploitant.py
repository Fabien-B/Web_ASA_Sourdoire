template = Import('template.py' ) # import du fichier template (entete, pieds de page...)
connexion = Import('gestion_session.py')
releve = Import('releve.py')
exploitantfile = Import('Exploitant.py')
parcelle = Import('parcelle.py')
compteur = Import('compteur.py')
import bcrypt
#RIEN DU TOUT

def index(error=''):
    ret=template.afficherHautPage(error, titre='Gérer les membres')
    if "login" in Session() and Session()['Id_exploitant']==0:
        ret += corps_page_connecte()
    else:
        ret += corps_page_deconnecte()
    ret += template.afficherBasPage()
    return ret

def corps_page_connecte():
    html = """
        <div class="container">
            <div class="sixteen columns main-content" style="text-align:center;">
                <h1>Gestion des membres</h1>
            </div>
            <aside class="six columns alpha">

                <form action="traiterListeExploitant" method="post">
                    <select id="exploitant_choice" name="idExploitant" size="10" onchange="update_info_exploitant(this,this.selectedIndex)">
            """
    html += create_select()
    html += """
                    </select>
                    <button name="choix" value="modifier">Modifier ce membre</button>
                    <button name="choix" value="ajout">Ajouter un membre</button>
                </form>
            </aside>
            <article class="ten columns omega">
            """
    html+= get_details(1)
    html+="""
            </article>
        </div>
    """
    return html

def get_details(id_ex):
    id_ex = int(id_ex)
    expl = exploitantfile.Exploitant(id_ex)
    tel = expl.tel if expl.tel else 'Pas de donnée'
    mail = expl.mail if expl.mail else 'Pas de donnée'
    id_parcelles = parcelle.Parcelle.get_exploitant_parcelle_id(expl.id)
    parcelles = []
    for id_parc in id_parcelles:
        parcelles.append(parcelle.Parcelle(id_parc))
    nb_parcelles = len(parcelles)
    html='''<div id="infosexploitant">
            Nom : {0} </br>
            Téléphone :  {1} </br>
            E-mail : {2} </br>
            {3} parcelles : </br>
            <div class="five columns alpha">
            '''.format(expl.nom,tel,mail,nb_parcelles)
    html += make_table(parcelles)
    html += '''
            </div>
            </div>
            '''
    return html

def corps_page_deconnecte():
    html = """
        <div class="container">
            <div class="sixteen columns main-content" style="text-align:center;">
                <h2>Vous n'avez pas accès à cette page</h2>
            </div>
        </div>
    """
    return html

def corps_page_exploitant(exploitant):
    if exploitant:
        nom = exploitant.nom
        login = exploitant.login
        mail = exploitant.mail
        tel = exploitant.tel
        id = exploitant.id
    else:
        nom = ''
        login = 'login' + str(exploitantfile.Exploitant.get_last_id()+1)
        mail = ''
        tel = ''
        id = -1
    html = template.afficherHautPage(titre='Gérer les membres')
    html += """
        <div class="container">
            <div class = "sixteen columns main-content">
                <form action="traiterFormExploitant" method="POST">
                    <input name="myexploitantid" value="{4}" style="display:none;" />
                    <div class="one-third column alpha">
                        <label>Nom du membre :</label>
                        <h3>{0}</h3>
                        <label>Changer le nom :</label>
                        <input name="nom" type="text" placeholder="Nouveau nom" />
                        <hr>
                        <label>Numéro de téléphone du membre :</label>
                        <h3>{3}</h3>
                        <label>Changer le numéro de téléphone :</label>
                        <input type="tel" name="tel" placeholder="Nouveau numéro de téléphone" />
                    </div>
                    <div class="one-third column alpha">
                        <label>Identifiant du membre :</label>
                        <h3>{1}</h3>
                        <label>Changer l'identifiant : (A communiquer !)</label>
                        <input name="login" type="text" maxlength=10 placeholder="Nouvel identifiant" />
                        <hr>
                        <label>Changer le mot de passe : (A communiquer !)</label>
                        <input name="password" type="password" placeholder="Nouveau mot de passe" />
                        <input name="password_confirm" type="password" placeholder="Confirmer le nouveau mot de passe" />
                    </div>
                    <div class="one-third column omega">
                        <label>Adresse mail du membre:</label>
                        <h3>{2}</h3>
                        <label>Changer l'adresse mail :</label>
                        <input name="email" type="email" placeholder="Nouvelle adresse mail" />
                        <hr>
                        <button name="choix" value="parcelle">Modifier ses parcelles</button>
    </div>
    <hr>
    <div class="two-thirds column omega offset-by-five">
    <label>Entrer votre mot de passe administrateur(pour confirmation) :</label>
    <input type="password" name="admin_password" placeholder="Mot de passe actuel" required />
    <br />
    <button name="choix" value="valider">Valider</button>
    </div>
    </form>
    <div class="five columns alpha offset-by-five">
    <form action="index">
    <button name="error" value="Modifications annulées" action="index" style="margin-left:10px; margin-top:10px;">Annuler</button>
    <form>
    </div>
    </div>
    </div>
""".format(nom, login, mail, tel, id)
    html += template.afficherBasPage()
    return html

def modif_parcelles(myexploitant):
    html= template.afficherHautPage(titre="Gérer les membres")
    html+="""
    <div class="container">
        <div class="sixteen columns over" style="text-align:center;">
            <h1>Gestion des parcelles de {0}</h1>
        </div>
        <div class="sixteen columns main-content">
            <form>
                <fieldset>
                    <legend>Parcelles détenues</legend>
                    """.format(myexploitant.nom)
    html+=check_parcelles(myexploitant)
    html+="""
                </fieldset>
        </div>
    </div>
    """
    html += template.afficherBasPage()
    return html


def check_parcelles(myexploitant):
    html=""
    parcellelist = parcelle.Parcelle.get_exploitant_parcelle_id(myexploitant.id)
    for parc in parcellelist:
        html+='<input type="checkbox" name="parcelle" value="'+parc.id+'">'+parc.nom+'</input>'
    return html



def traiterListeExploitant(choix, idExploitant=-1):
    if choix == "ajout":
        return corps_page_exploitant(None)
    elif idExploitant == -1:
        return index(error="Veuillez d'abord choisir un membre dans la liste")
    else:
        if choix=="modifier":
            exploitant=exploitantfile.Exploitant(int(idExploitant))
            return corps_page_exploitant(exploitant)

def make_table(parcelles):
    html="<ul style='margin-left:30px; list-style-type:circle;'>"
    i = 0
    for parcel in parcelles:
        i+=1
        if i==8:
            html+="""
            </ul>
            </div>
            <div class="five columns omega">
            <ul style='list-style-type:circle;'>
        """
        nom_parcelle = parcel.nom if parcel.nom != '' else 'Nom Inconnu'
        html+="<li>"+str(nom_parcelle).title()+"</li>"
    html += "</ul>"
    return html


def traiterFormExploitant(myexploitantid, nom=0, email=0, choix=0, admin_password=0, password=0, password_confirm=0, login=0, tel=0 ):
    myexploitantid = int(myexploitantid)
    admin = exploitantfile.Exploitant(0)
    myexploitant = exploitantfile.Exploitant(myexploitantid)
    if bcrypt.hashpw(admin_password, admin.salt) == admin.password:
    #if admin_password = admin.password:
        if choix == "parcelle":
            return modif_parcelles(myexploitant)
        elif choix == "cancel":
            return index(error="Modifications annulées")
        else:
            salt = bcrypt.gensalt()
            #salt = ''
            if not nom: nom = myexploitant.nom
            if not tel: tel = myexploitant.tel
            if not login: login = myexploitant.login
            if not password:
                password = myexploitant.password
            elif password != password_confirm:
                return index('mots de passe différents !')
            else:
                password = bcrypt.hashpw(password, salt)
                #RIEN DU TOUT
            if not email: email = myexploitant.mail
            if myexploitantid == -1:
                myexploitant.login = login
                myexploitant.mail = email
                myexploitant.nom = nom
                myexploitant.password = password
                myexploitant.tel = tel
                myexploitant.salt = salt
                myexploitant.save()
            else:
                myexploitant.update(nom, email, tel, login, password, salt)
            return index('Exploitant mis à jour')
    else:
        return index(error="Mot de passe administrateur incorrect")






def create_select():
    html = """
    """
    exploitant_list = exploitantfile.Exploitant.get_all_exploitants()
    for exploitant in exploitant_list:
        html+='<option value="'+str(exploitant.id)+'">'+str(exploitant.id)+' - '+exploitant.nom+'</option>\n'
    return html

def traiterFormulaireConnexion(choix, login='',password=''):
    return connexion.Connexion(index, choix, login, password)
